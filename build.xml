<?xml version="1.0" encoding="UTF-8" ?>
<!--
	Copyright (c) 2004 on behalf of the EU EGEE Project: 
	The European Organization for Nuclear Research (CERN), 
	Istituto Nazionale di Fisica Nucleare (INFN), Italy
	Datamat Spa, Italy
	Centre National de la Recherche Scientifique (CNRS), France
	CS Systeme d'Information (CSSI), France
	Royal Institute of Technology, Center for Parallel Computers (KTH-PDC), Sweden
	Universiteit van Amsterdam (UvA), Netherlands
	University of Helsinki (UH.HIP), Finland
	University of Bergen (UiB), Norway
	Council for the Central Laboratory of the Research Councils (CCLRC), United Kingdom

	Build file for the GLite DGAS Subsystem
	
	Author: Giuseppe Patania <patania@to.infn.it>
	Version info: $Id: build.xml,v 1.16 2005/05/26 15:13:13 zurek Exp $
	Release: $Name: glite-dgas_branch_3_4_0 $

	Revision history:
	$Log: build.xml,v $
	Revision 1.16  2005/05/26 15:13:13  zurek
	inserted module.build.file

	Revision 1.15  2004/10/29 22:53:32  dimeglio
	Use envset target
	
	Revision 1.14  2004/10/28 22:59:28  dimeglio
	Quoted ant command line parameters
	
	Revision 1.13  2004/10/28 18:18:00  dimeglio
	Added envcheck to individual components
	
	Revision 1.12  2004/10/26 15:11:18  dimeglio
	Added dependency of clean on envchecks
	
	Revision 1.11  2004/10/25 20:56:59  dimeglio
	Use antExec
	
	Revision 1.10  2004/10/15 14:59:59  gpatania
	added pa-service target
	
	Revision 1.9  2004/09/29 13:33:17  flammer
	Only update of line formatting.
	
	Revision 1.8  2004/09/09 21:03:05  dimeglio
	Moved tag target to targets-common
	
	Revision 1.7  2004/09/05 22:28:41  dimeglio
	Modified to use small.memory mode
	
	Revision 1.6  2004/08/27 03:03:06  dimeglio
	Preserve original timestamp when copying file and overwrite when new
	
	Revision 1.5  2004/08/27 02:46:47  dimeglio
	Added logic to create the tagged dependencies properties file
	
	Revision 1.4  2004/08/25 14:47:12  dimeglio
	Added cruisecontrol stub file update
	
	Revision 1.3  2004/07/16 16:25:43  flammer
	Added tags for automated adding of components.
	
	Revision 1.2  2004/07/15 17:01:53  gpatania
	added pa-clients and hlr-service target names
	
-->

<project name="dgas" default="dist">

	<description>
		Ant build file to build the GLite DGAS Subsystem
	</description>
	
	<!-- =========================================
	     Import properties (order is important) 
		 ========================================= -->
	
	<!-- Import baseline & user properties -->
	<import file="../org.glite/project/baseline.properties.xml" />

	<!-- Import subsystem build properties, 
	                      subsystem properties & 
	                      subsystem common properties -->
	<import file="./project/properties.xml" />

	<!-- Import global build properties and global properties -->
	<import file="${global.properties.file}" />
				
	<!-- =========================================
		 Load dependencies properties files (order is important) 
	     ========================================= -->
	<property file="${user.dependencies.file}"/>
	<property file="${subsystem.dependencies.file}"/>
	<property file="${global.dependencies.file}"/>	

	<!-- =========================================
		 Load configure options
		 ========================================= -->
	<import file="${global.configure.options.file}"/>
			
	<!-- =========================================
		 Import global task definitions
	     ========================================= -->
	<import file="${global.taskdefs.file}" />
	
	<!-- =========================================
	     Import global compiler definitions
  	     ========================================= -->
	<import file="${global.compilerdefs.file}" />
		
	<!-- =========================================
		 Import targets 
	     ========================================= -->
	<import file="${global.targets-common.file}"/>
	
	<!-- =========================================
		 Load version file 
	     ========================================= -->
	<property file="${module.version.file}"/>
	<property file="${module.build.file}"/>
			
	<!-- ===============================================
		  Public common targets
	  	 =============================================== -->
	
	<target name="localinit" depends="envcheck">

		<echo> Preparing directories ... </echo>
		
		<mkdir dir="${stage.bin.dir}" />
		<mkdir dir="${stage.lib.dir}" />
		<mkdir dir="${stage.java.dir}" />
		<mkdir dir="${stage.inc.dir}" />
		<mkdir dir="${stage.int.dir}" />

		<mkdir dir="${dist.dir}" />

	</target>

	<target name="init" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="init"/>
		</antcall>
	</target>

	<target name="checkstyle" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="checkstyle"/>
		</antcall>
	</target>

	<target name="compile" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="compile"/>
		</antcall>
	</target>

	<target name="compiletest" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="compiletest"/>
		</antcall>
	</target>

	<target name="unittest" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="unittest"/>
		</antcall>
	</target>

	<target name="unitcoverage" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="unitcoverage"/>
		</antcall>
	</target>

	<target name="doc" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="doc"/>
		</antcall>
	</target>

    	<target name="stage" depends="localinit">
            	<antcall target="buildmodules">
                    <param name="target" value="stage"/>
            	</antcall>
    	</target>

	<target name="dist" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="dist"/>
		</antcall>
	</target>

	<target name="install" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="install"/>
		</antcall>
	</target>

	<target name="all" depends="localinit">
		<antcall target="buildmodules">
			<param name="target" value="all"/>
		</antcall>
	</target>

	<target name="clean" depends="envcheck">

		<property name="offline.repository" value="true" />
		<antcall target="buildmodules">
			<param name="target" value="clean"/>
		</antcall>

		<delete dir="${module.bin.dir}" />
		<delete dir="${module.lib.dir}" />
		<delete dir="${module.autosrc.dir}" />
		<delete dir="${module.autodoc.dir}" />
		<delete dir="${module.test.reports.dir}" />

	</target>

	<target name="cleanAll" depends="clean"/>

	<!-- ===============================================
		 Private targets
	     =============================================== -->
	
	<!-- ===============================================
		 Modules proxy targets
	     =============================================== -->

	<!-- component targets definitions tag = do not remove = -->

	<target name="common" unless="setenvonly" depends="envset, globus,mysql">
		<if>
			<isset property="small.memory" />
			<then>
				<exec dir="${dgas.subsystem.dir}.common" executable="${antExec}" failonerror="${failonerror}">
					<arg line="${target} &quot;-Dsmall.memory=true&quot; &quot;-Dbootstrap=${bootstrap}&quot; &quot;-Dfailonerror=${failonerror}&quot; &quot;-Ddo.cvs.tag=${do.cvs.tag}&quot;"/>
				</exec>
			</then>
			<else>
				<ant dir="${dgas.subsystem.dir}.common"
            	     target="${target}"
            	     inheritall="false" />
			</else>
		</if>
	</target>

	<target name="hlr-clients" unless="setenvonly" depends="envset, globus, mysql, common">
		<if>
			<isset property="small.memory" />
			<then>
				<exec dir="${dgas.subsystem.dir}.hlr-clients" executable="${antExec}" failonerror="${failonerror}">
					<arg line="${target} &quot;-Dsmall.memory=true&quot; &quot;-Dbootstrap=${bootstrap}&quot; &quot;-Dfailonerror=${failonerror}&quot; &quot;-Ddo.cvs.tag=${do.cvs.tag}&quot;"/>
				</exec>
			</then>
			<else>
				<ant dir="${dgas.subsystem.dir}.hlr-clients"
            	     target="${target}"
            	     inheritall="false" />
			</else>
		</if>
	</target>

	<target name="pa-clients" unless="setenvonly" depends="envset, globus, mysql, common">
		<if>
			<isset property="small.memory" />
			<then>
				<exec dir="${dgas.subsystem.dir}.pa-clients" executable="${antExec}" failonerror="${failonerror}">
					<arg line="${target} &quot;-Dsmall.memory=true&quot; &quot;-Dbootstrap=${bootstrap}&quot; &quot;-Dfailonerror=${failonerror}&quot; &quot;-Ddo.cvs.tag=${do.cvs.tag}&quot;"/>
				</exec>
			</then>
			<else>
				<ant dir="${dgas.subsystem.dir}.pa-clients"
            	     target="${target}"
            	     inheritall="false" />
			</else>
		</if>
	</target>

	<target name="hlr-service" unless="setenvonly" depends="envset, globus, mysql, common, pa-clients">
		<if>
			<isset property="small.memory" />
			<then>
				<exec dir="${dgas.subsystem.dir}.hlr-service" executable="${antExec}" failonerror="${failonerror}">
					<arg line="${target} &quot;-Dsmall.memory=true&quot; &quot;-Dbootstrap=${bootstrap}&quot; &quot;-Dfailonerror=${failonerror}&quot; &quot;-Ddo.cvs.tag=${do.cvs.tag}&quot;"/>
				</exec>
			</then>
			<else>
				<ant dir="${dgas.subsystem.dir}.hlr-service"
            	     target="${target}"
            	     inheritall="false" />
			</else>
		</if>
	</target>



    <target name="pa-service" unless="setenvonly" depends="envset, globus, mysql, common">
        <if>
            <isset property="small.memory" />
            <then>
                <exec dir="${dgas.subsystem.dir}.pa-service" executable="${antExec}" failonerror="${failonerror}">
                        <arg line="${target} &quot;-Dsmall.memory=true&quot; &quot;-Dbootstrap=${bootstrap}&quot; &quot;-Dfailonerror=${failonerror}&quot; &quot;-Ddo.cvs.tag=${do.cvs.tag}&quot;"/>
                    </exec>
            </then>
            <else>
                <ant dir="${dgas.subsystem.dir}.pa-service"
                     target="${target}"
                     inheritall="false" />
            </else>
        </if>
	</target>




	<!-- Main proxy -->
	<target name="buildmodules" depends="envset,
						 common,
					     hlr-clients,
					     pa-clients,
					     hlr-service,
                                             pa-service">
		<echo append="true" file="${global.project.dir}/cruisecontrol-stub.xml">
	&lt;project name="${subsystem.name}" type="post-subsystem" packageName="${global.prefix}-${subsystem.prefix}"/&gt;
		</echo>
	</target>

</project>
